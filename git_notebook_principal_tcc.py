# -*- coding: utf-8 -*-
"""Git Notebook Principal - TCC.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VzE0mVPzeMPrORnZnvRxzmIhyQ4LnLeb
"""

!pip install basedosdados
#!pip install -U pandas-profiling

import numpy as np
import pandas as pd
import basedosdados as bd
from string import ascii_letters
import seaborn as sns
import matplotlib.pyplot as plt


def get_indicadores(df_indicadores):

  indicadores = df_indicadores[
                              [
                                'ano',
                                'id_municipio',
                                'id_escola',
                                'rede', 
                                'atu_em', 
                                'had_em', 'tdi_em',
                                'taxa_aprovacao_em',
                                'taxa_reprovacao_em',
                                'taxa_abandono_em',
                                'icg_nivel_complexidade_gestao_escola'
                                ]
                              ]
  indicadores_nivel_escola = indicadores.query('id_municipio == "3550308" & rede =="estadual" & 2020 > ano >= 2015')
  return indicadores_nivel_escola




def get_indicadores_nivel_escola(indicadores_nivel_escola):

  indicadores_nivel_escola['icg_nivel_complexidade_gestao_escola'] = indicadores_nivel_escola['icg_nivel_complexidade_gestao_escola'].str.replace('nivel ','')
  indicadores_nivel_escola['icg_nivel_complexidade_gestao_escola'] = indicadores_nivel_escola['icg_nivel_complexidade_gestao_escola'].astype(int)

  return indicadores_nivel_escola



def get_indicadores_idesp(df_idesp, indicadores_nivel_escola):

  df_idesp = df_idesp.query('id_municipio == "3550308" & 2020 > ano >= 2015')

  idesp_resumido = df_idesp[['ano','id_municipio','id_escola','nota_idesp_em']]

  indicadores_idesp = pd.merge(indicadores_nivel_escola,idesp_resumido,on=["ano","id_municipio","id_escola"],how='left')
  
  
  return indicadores_idesp




def get_indicadores_idesp_inse(indicadores_idesp, df_inse):

  inse_resumido = df_inse[['id_escola','diretoria','nivel_socio_economico']]

  indicadores_idesp_inse = pd.merge(indicadores_idesp,inse_resumido,on="id_escola",how="left")

  indicadores_idespnotnull_inse = indicadores_idesp_inse.dropna()

  return indicadores_idespnotnull_inse



def get_base_transposta(indicadores_idespnotnull_inse):
  grupo_por_diretoria = indicadores_idespnotnull_inse.groupby(['ano',
                                                              'diretoria'])[['atu_em',
                                                                              'had_em',
                                                                              'tdi_em',
                                                                              'taxa_aprovacao_em',
                                                                              'taxa_reprovacao_em',
                                                                              'taxa_abandono_em',
                                                                              'icg_nivel_complexidade_gestao_escola',
                                                                              'nota_idesp_em',
                                                                              'nivel_socio_economico']].mean()


  base_transp = indicadores_idespnotnull_inse.pivot_table(index= ['id_escola','diretoria'],
                                                          columns='ano',
                                                          values=['atu_em',
                                                                  'had_em',
                                                                  'tdi_em',
                                                                  'taxa_aprovacao_em',
                                                                  'taxa_reprovacao_em',
                                                                  'taxa_abandono_em',
                                                                  'icg_nivel_complexidade_gestao_escola',
                                                                  'nota_idesp_em',
                                                                  'nivel_socio_economico']).reset_index()


  base_transp = pd.DataFrame(base_transp.to_records())
  base_transp = base_transp.iloc[:,1:]

  df_central = base_transp.groupby(base_transp.columns[1]).mean()
  base_transp_central = pd.DataFrame(df_central.to_records())
  base_transp_central = base_transp_central.round(3)

  return base_transp_central


#acionamento das funções


#extrair base ideb do bd
df_ideb = bd.read_table(dataset_id='br_inep_ideb', 
                            table_id='escola',
                            billing_project_id='meu-tcc-308320')

#extrair base idesp do bd
df_idesp = bd.read_table(dataset_id='br_sp_seduc_idesp', 
                             table_id='escola',
                             billing_project_id='meu-tcc-308320')
 
 #extrair base do fluxo escolar do bd 
df_fluxo = bd.read_table(dataset_id='br_sp_seduc_fluxo_escolar', 
                             table_id='escola',
                             billing_project_id='meu-tcc-308320')    

#extrair base inse do bd
df_inse = bd.read_table(dataset_id='br_sp_seduc_inse', 
                            table_id='escola',
                            billing_project_id='meu-tcc-308320')   

#extrair base dos principais indicadores do bd
df_indicadores = bd.read_table(dataset_id='br_inep_indicadores_educacionais', 
                                   table_id='escola',
                                   billing_project_id='meu-tcc-308320')



#tratamento dos dados de indicadores
indicadores_function = get_indicadores(df_indicadores)

#tratamento dos índices da escola
indicadores_nivel_escola_function = get_indicadores_nivel_escola(indicadores_function)

#cruzamento entre a base de indices e a base do idesp
get_indicadores_idesp_function = get_indicadores_idesp(df_idesp, indicadores_nivel_escola_function)

#cruzamento da base de índices+idesp com a de inse
get_indicadores_idesp_inse_function = get_indicadores_idesp_inse(get_indicadores_idesp_function, df_inse)

#transpondo o código para deixar os anos nas colunas
get_base_transposta_function = get_base_transposta(get_indicadores_idesp_inse_function)

get_base_transposta_function